<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.carrots.backstageservice.dao.CompanyOneMapper">
  <resultMap id="BaseResultMap" type="com.jnshu.carrots.backstageservice.model.CompanyOne">
    <id column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_logo" jdbcType="VARCHAR" property="companyLogo" />
    <result column="company_trade" jdbcType="VARCHAR" property="companyTrade" />
    <result column="company_tag" jdbcType="VARCHAR" property="companyTag" />
    <result column="company_aut" jdbcType="INTEGER" property="companyAut" />
    <result column="company_people" jdbcType="VARCHAR" property="companyPeople" />
    <result column="company_status" jdbcType="INTEGER" property="companyStatus" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="company_area" jdbcType="VARCHAR" property="companyArea" />
    <result column="company_city" jdbcType="VARCHAR" property="companyCity" />
    <result column="company_district" jdbcType="VARCHAR" property="companyDistrict" />
    <result column="company_slogan" jdbcType="VARCHAR" property="companySlogan" />
    <result column="company_size" jdbcType="INTEGER" property="companySize" />
    <result column="company_product_name" jdbcType="VARCHAR" property="companyProductName" />
    <result column="company_product_logo" jdbcType="VARCHAR" property="companyProductLogo" />
    <result column="company_product_slogan" jdbcType="VARCHAR" property="companyProductSlogan" />
    <result column="company_phone" jdbcType="VARCHAR" property="companyPhone" />
    <result column="company_email" jdbcType="VARCHAR" property="companyEmail" />
    <result column="company_addr" jdbcType="VARCHAR" property="companyAddr" />
    <result column="company_map" jdbcType="VARCHAR" property="companyMap" />
    <result column="company_caption" jdbcType="VARCHAR" property="companyCaption" />
    <result column="company_product_caption" jdbcType="VARCHAR" property="companyProductCaption" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="count_job" jdbcType="INTEGER" property="countJob" />

  </resultMap>


  <select id="selectCommonCompany"  resultMap="BaseResultMap">
    select company_id,company_logo
    FROM company_one
    WHERE company_aut=1
    ORDER BY update_at DESC;
  </select>


  <select id="selectNewAutoneCompany"   resultMap="BaseResultMap">
    select a.company_id,a.company_name,a.company_trade,b.company_size,b.company_area
    FROM company_one a
      INNER JOIN company_two b on a.company_id=b.company_one_id
    WHERE a.company_aut =0  AND a.company_status =0
    ORDER BY a.update_at DESC limit 1;
  </select>


  <select id="selectCompanyById" parameterType="java.lang.Long"  resultMap="BaseResultMap">
    select a.company_id,a.company_name,a.company_logo,a.company_trade,a.company_tag,a.company_aut,
      a.company_people,b.company_slogan,b.company_size,b.company_area,b.company_caption,b.company_product_name,
      b.company_product_logo,b.company_product_slogan,b.company_product_caption
    FROM company_one a
      INNER JOIN company_two b on a.company_id=b.company_one_id
    WHERE a.company_id= #{companyId,jdbcType=BIGINT}
  </select>


  <select id="selectNewAutCompany"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT distinct a.company_id,a.company_logo,a.company_trade,a.company_name,c.company_slogan,GROUP_CONCAT(b.job_name)job_name
    FROM company_one a
      LEFT JOIN job_one b ON a.company_name=b.job_company
      INNER JOIN company_two c ON a.company_id=c.company_one_id
    WHERE a.company_aut=0 AND a.company_status=0 AND b.job_status=0
    GROUP BY b.company_name ORDER BY a.update_at DESC LIMIT #{size};
  </select>


  <select id="selectCompanyList"  resultMap="BaseResultMap">
    SELECT a.company_id,a.company_name,a.company_logo,a.company_trade,b.company_slogan,b.company_size,b.company_area,COUNT(c.job_company) as count_job
    FROM company_one a
    INNER JOIN company_two b ON a.company_id=b.company_one_id
    INNER JOIN job_one c ON a.company_name=c.job_company
    <where>
      a.company_status=0 AND c.job_status=0
      <if test="companyName !=null">
        AND a.company_name LIKE CONCAT('%',#{companyName},'%')
      </if>
      <if test="companyArea !=null">
        AND b.company_area LIKE CONCAT('%',#{companyArea},'%')
      </if>
      <if test="companyTrade !=null">
        <foreach collection="companyTrade" item="company" open="AND" separator="OR">
          a.company_trade LIKE  CONCAT('%',#{company},'%')
        </foreach>
      </if>
      <if test="companySize !=null">
        <foreach collection="companySize" item="company" open="AND" separator="OR">
          b.company_size LIKE  CONCAT('%',#{company},'%')
        </foreach>
      </if>
    </where>
    GROUP BY job_company
    ORDER BY a.update_name DESC
  </select>


  <select id="selectCompanyFalse"  resultMap="BaseResultMap">
    SELECT a.company_id,a.company_name,a.company_logo,a.company_trade,b.company_slogan,b.company_size,b.company_area,COUNT(c.job_company) as count_job
    FROM company_one a
      INNER JOIN company_two b ON a.company_id=b.company_one_id
      INNER JOIN job_one c ON a.company_name=c.job_company
    WHERE a.company_status=0 AND c.job_status=0
    GROUP BY c.job_company
    ORDER BY a.update_name DESC
    LIMIT 3
  </select>



  <select id="selectBackCompanyList" parameterType="CompanyOne" resultMap="BaseResultMap">
    select a.company_id,a.company_name,a.company_trade,a.company_aut,a.company_status,
    b.company_area,b.company_city,b.company_district,b.company_size
    FROM company_one a
    INNER JOIN company_two b
    ON a.company_id=b.company_one_id
    <where>
      <if test="companyName !=null">
        AND a.company_name LIKE CONCAT('%',#{companyName},'%')
      </if>
      <if test="companyTrade !=null">
        AND a.company_trade LIKE  CONCAT('%',#{companyTrade},'%')
      </if>
      <if test="companyProductName !=null">
        AND b.company_product_name LIKE CONCAT('%',#{companyProductName},'%')
      </if>
      <if test="companyAut !=null">
        AND a.company_aut=#{companyAut}
      </if>
      <if test="companyStatus !=null">
        AND a.company_status=#{companyStatus}
      </if>
      <if test="companyArea !=null">
        AND b.company_area=#{companyArea}
      </if>
      <if test="companyCity !=null">
        AND b.company_city=#{companyCity}
      </if>
      <if test="companyDistrict !=null">
        AND b.company_district=#{companyDistrict}
      </if>
    </where>
    ORDER BY a.update_name DESC
  </select>


  <select id="selectBackCompanyById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
      a.company_name,a.company_people,a.company_aut,a.company_trade,
      a.company_logo,a.company_tag,
      b.company_slogan,b.company_area,b.company_city,b.company_district,b.company_size,
      b.company_caption,b.company_product_name,b.company_product_logo,
      b.company_product_slogan,b.company_product_caption,b.company_phone,
      b.company_email,b.company_addr,b.company_map
    FROM
      company_one a
      INNER JOIN company_two b ON a.company_id = b.company_one_id
    WHERE
      a.company_id = #{companyId,jdbcType=BIGINT}
  </select>

  <update id="updateStatusById" parameterType="CompanyOne">
    update company_one
    <set>
      <if test="companyStatus != null">
        company_status = #{companyStatus,jdbcType=INTEGER},
      </if>
      <if test="companyAut != null">
        company_aut = #{companyAut,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=BIGINT}
  </update>


  <update id="updateById" parameterType="JobOne">
    UPDATE company_one a
    INNER JOIN company_two b ON a.company_id = b.company_one_id
    set a.company_name=#{companyName,jdbcType=VARCHAR},
      a.company_people=#{companyPeople,jdbcType=VARCHAR},
      a.company_aut=#{companyAut,jdbcType=INTEGER},
      a.company_trade=#{companyTrade,jdbcType=VARCHAR},
      a.company_logo=#{companyLogo,jdbcType=VARCHAR},
      a.company_tag=#{companyTag,jdbcType=VARCHAR},
      a.update_at=#{updateAt,jdbcType=BIGINT},
      a.update_name=#{updateName,jdbcType=VARCHAR},
      b.company_slogan=#{companySlogan,jdbcType=VARCHAR},
      b.company_area=#{companyArea,jdbcType=VARCHAR},
      b.company_city=#{companyCity,jdbcType=VARCHAR},
      b.company_district=#{companyDistrict,jdbcType=VARCHAR},
      b.company_size=#{companySize,jdbcType=INTEGER},
      b.company_caption=#{companyCaption,jdbcType=VARCHAR},
      b.company_product_name=#{companyProductName,jdbcType=VARCHAR},
      b.company_product_logo=#{companyProductLogo,jdbcType=VARCHAR},
      b.company_product_slogan= #{companyProductSlogan,jdbcType=VARCHAR},
      b.company_product_caption=#{companyProductCaption,jdbcType=VARCHAR},
      b.company_phone=#{companyPhone,jdbcType=VARCHAR},
      b.company_email=#{companyEmail,jdbcType=VARCHAR},
      b.company_addr=#{companyAddr,jdbcType=VARCHAR},
      b.company_map=#{companyMap,jdbcType=VARCHAR}
      where a.company_id = #{companyId,jdbcType=BIGINT}
  </update>



  <insert id="insertOne" parameterType="CompanyOne" useGeneratedKeys="true" keyProperty="companyId">
    insert into company_one (company_name,company_people,company_status,
                             company_aut,company_trade,company_logo,
                             company_tag,update_at,update_name,create_time,create_name
    )
    values (#{companyName,jdbcType=VARCHAR},#{companyPeople,jdbcType=VARCHAR},#{companyStatus,jdbcType=INTEGER},
            #{companyAut,jdbcType=INTEGER},#{companyTrade,jdbcType=VARCHAR},#{companyLogo,jdbcType=VARCHAR},
            #{companyTag,jdbcType=VARCHAR},#{updateAt,jdbcType=BIGINT},#{updateName,jdbcType=VARCHAR},
            #{createTime,jdbcType=BIGINT},#{createName,jdbcType=VARCHAR})

  </insert>


  <insert id="insertTwo" parameterType="JobOne">
    insert into company_two (company_one_id,company_slogan,
                         company_area,
                         company_city,
                         company_district,
                         company_size,
                         company_caption,
                         company_product_name,
                         company_product_logo,
                         company_product_slogan,
                         company_product_caption,
                         company_phone,
                         company_email,
                         company_addr,
                         company_map
    )
    values (#{companyOneId,jdbcType=BIGINT},
      #{companySlogan,jdbcType=VARCHAR},
      #{companyArea,jdbcType=VARCHAR},
      #{companyCity,jdbcType=VARCHAR},
      #{companyDistrict,jdbcType=VARCHAR},
      #{companySize,jdbcType=INTEGER},
      #{companyCaption,jdbcType=VARCHAR},
      #{companyProductName,jdbcType=VARCHAR},
      #{companyProductLogo,jdbcType=VARCHAR},
      #{companyProductSlogan,jdbcType=VARCHAR},
      #{companyProductCaption,jdbcType=VARCHAR},
      #{companyPhone,jdbcType=VARCHAR},
      #{companyEmail,jdbcType=VARCHAR},
      #{companyAddr,jdbcType=VARCHAR},
      #{companyMap,jdbcType=VARCHAR}
    )
  </insert>


  <delete id="deleteById" parameterType="java.lang.Long">
    DELETE a,b,c,d
    FROM
      company_one a INNER JOIN company_two b
        ON a.company_id=b.company_one_id
      INNER JOIN job_one c
        ON a.company_name=c.job_company
      INNER JOIN job_two d
        ON c.job_id=d.job_one_id
    WHERE company_id = #{companyId,jdbcType=BIGINT}
  </delete>

</mapper>